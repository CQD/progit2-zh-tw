[[_git_branching]]
== 使用 Git 分支

(((branches)))
幾乎每一種版本控制系統（Version Control System，以下簡稱 VCS）都支援某種形式的分支功能，
使用分支意味著你可以從開發主線上分離開來，然後在不影響主線的情況下繼續工作；
在很多 VCS 中，這是個昂貴的過程，常常需要對原始程式碼目錄建立一個完整的副本，對大型專案來說會花費很長時間。

有人把 Git 的分支模型視為它的「殺手級功能」，正是因為它而讓 Git 在 VCS 社群中顯得與眾不同。
它有何特別之處呢？
Git 的分支簡直是難以置信的羽量級，新建分支的操作幾乎可以在瞬間完成，並且一般來說切換不同分支也很快；
跟其它的 VCS 不一樣的地方是 Git 鼓勵在工作流程中頻繁地使用分支與合併，即使一天之內進行許多次都沒問題。
理解並掌握這個特性後，它會給你一個強大而獨特的工具，從此完全地改變你的開發方式。

include::sections/nutshell.asc[]

include::sections/basic-branching-and-merging.asc[]

include::sections/branch-management.asc[]

include::sections/workflows.asc[]

include::sections/remote-branches.asc[]

include::sections/rebasing.asc[]

=== 總結

我們已介紹 Git 基本的分支和合併，
你應該對於「建立並切換到新分支」、「在不同分支之間切換」、「合併本地分支」感到相當輕鬆寫意；
你應該也能夠做到「把想要分享的分支推送到共用伺服器上」、「在共享的分支上與其他人協作」、「在分享自己的分支前先進行變基」。
下一章我們將介紹架設自己的 Git 版本庫託管伺服器所需要的知識。
